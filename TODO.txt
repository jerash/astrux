export csv
	remplacer les , par des ;

dans le fichiers oscmidistate.csv  
	erreur pour /mixer/drums si c'est un autre process ecasound ? > pas forcément car /mixer/input est sur le main et mixer/drums sur un submix précis
	il faut s'assurer que le bridge sache vers quel port udp rediriger les messages, mais pour le midi normalement c'est bon

option to keep ecasound player opened after transport stop

dummy song & ecacfg , examples in astrux folder for project creation

verify submix can't be named "mixer" (would overwrite main ecs file)
	> or add submix_ prefix to generated files

JPMIDI : ("channels") ne me liste pas les tracks qui ne contiennent QUE des PC, vérifier si il les envoi

OSCMIDIbridge :
	ajouter mot clé "mute" pour les pistes (c-muting)
	ajouter mot clé "bypass" pour les pistes (c-bypass)
	>par extension, pas besoin de midi si on peut utiiliser c-select,cop-select,copp-select,copp-value
	
dans livescreens, il est prévu de pouvoir désactiver certaines I/O du main mixer pour une chanson en particulier
	> ca implique de pouvoir envoyer un set de commandes tcp au ecasound main pour ne pas couper le engine
	> désactiver unne iput couperai le engine, donc il faut faire des mutes...
	>mais dans ce cas ca revient presque à avoir une state du mixer, donc utile ou pas ?

perl générer ini files
	>un submix va déclarer une nouvelle input automatiqument

create a lscp perl module
	> get_inputs, get_outputs, is_valid...etc

change getnextCC > getavailableCC with a table (in case some effect gets removed)

vérifier les TODO

modifier jack_smf-player pour créer un port midi par piste avec le nom de la piste ?
	> si je l aisse tomber jpmidi, on ne peut plus causer en tcp, ca passe par une shell... ou un fork
	> pour connecter en plumbing, le player n'utilise que les numéros de tracks
		> utilsier un script perl avec MIDI:: qui détermine le nom de la piste/numéro ?

change grep (wav;mid..etc) in song check to a global definition list
intégrer player type vidéo avec xjadeo

----DONE----
modifier la génération des submix ecs pour être générique avec plusieurs fichiers
:24271433
générer jack.plumbing : 
:28956eb
add global ecasound header generation (options) to project.ini : 
:5b95963
vérifier l'intégration des insert sur les outputs : corrigé 
:2100b92
check each project folder and generate ecs files
add override global ecasound header in song.ini 
valider l'idée d'une seul player, pouvant avoir plusieurs outputs si nécessaire. voir cohérence avec génération du bon nombre de pistes sur le mixer. >> ok, numéroter les sorties pour chaque piste, et faire le plumbing de manière adéquate
trouver une idée pour pouvoir avoir des CC sur les pistes du player sans générer un CC unique pour chaque chanson.
	> définir le nombre de piste player dans le projet > ok
	> assigner chaque fichier à jouer à une piste > ok
:c5a0fe2
create ecasound send command with all cs-load for players
:1cb21f23
mono player tracks are opened to stereo out, but play on left channel !
parse type=player input definitions
ajouter jack.plumbing pour les players
correction de bugs sur les nommages plumbing
correction de bugs sur les nommages oscmidi
supprimer le préfixe submix_ dans le nom du submix après import
ajouter jack.plumbing pour les sampler
:
stockage des fichiers générés dans un sous dossier